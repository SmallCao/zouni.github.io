<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nginx on 西凉观云海</title>
    <link>https://r.xboox.cn/nginx/</link>
    <description>Recent content in nginx on 西凉观云海</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://r.xboox.cn/nginx/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>一个端口配置多个服务</title>
      <link>https://r.xboox.cn/nginx/%E4%B8%80%E4%B8%AA%E7%AB%AF%E5%8F%A3%E5%A4%9A%E4%B8%AA%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://r.xboox.cn/nginx/%E4%B8%80%E4%B8%AA%E7%AB%AF%E5%8F%A3%E5%A4%9A%E4%B8%AA%E6%9C%8D%E5%8A%A1/</guid>
      <description>一个端口配置多个服务 实验阶段&amp;mdash;&amp;mdash;-&#xA;server { listen 80; server_name apitest.aa.com; location / { proxy_pass http://10.26.31.176:8081; #微服务地址测试环境 root html; index index.html index.htm; } } server { listen 80; server_name api.aa.com; location / { proxy_pass http://10.26.31.176:8080; #微服务地址线上环境 root html; index index.html index.htm; } }&#xD;</description>
    </item>
    <item>
      <title>增加rtmp module</title>
      <link>https://r.xboox.cn/nginx/%E5%A2%9E%E5%8A%A0rmtpmodule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://r.xboox.cn/nginx/%E5%A2%9E%E5%8A%A0rmtpmodule/</guid>
      <description>增加rtmp moudle 模块需要执行以下操作 1. 下载nginx源码 http://nginx.org/en/download.html&#xA;2. 下载nginx-rtmp-module 源码进行编译 https://github.com/arut/nginx-rtmp-module&#xA;3. nginx 编译 增加 rtmp-module模块 ./configure --add-module=~/nrm/nginx-rtmp-module-1.2.2 --prefix=/usr/local/nginx --with-debug&#xD;3.1 这一步之前需要安装pcre&#xA;./configure: error: the HTTP rewrite module requires the PCRE library.&#xD;You can either disable the module by using --without-http_rewrite_module&#xD;option, or install the PCRE library into the system, or build the PCRE library&#xD;statically from the source with nginx by using --with-pcre=&amp;lt;path&amp;gt; option.&#xD;下载pcre 非pcre2,这里会有个版本的区别，注意区分！&#xA;https://github.com/PCRE2Project/pcre2&#xA;https://sourceforge.net/projects/pcre/files/&#xA;3.2 下载 编译openssl</description>
    </item>
    <item>
      <title>常用命令</title>
      <link>https://r.xboox.cn/nginx/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://r.xboox.cn/nginx/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>启动 nginx&#xD;查看帮助 nginx -h 查看版本 nginx -v&#xD;查看配置参数 nginx -V&#xD;指定参数 nginx -s&#xD;测试配置参数是否正确 nginx -t -C filename&#xD;测试配置是否正确 nginx -t 重载，每次修改配置信息都需要重载nginx nginx -s reload&#xD;停止运行 nginx -s stop&#xD;</description>
    </item>
    <item>
      <title>手动编译安装nginx</title>
      <link>https://r.xboox.cn/nginx/%E6%89%8B%E5%8A%A8%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85nginx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://r.xboox.cn/nginx/%E6%89%8B%E5%8A%A8%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85nginx/</guid>
      <description>下载官方nginx 包 wget http://nginx.org/download/nginx-1.10.1.tar.gz&#xA;配置nginx #&amp;ndash;prefix 指定安装的目录 #/usr/local/nginx 是安装目录，不能和自己下载的文件目录重了 #./configure &amp;ndash;prefix=/usr/local/nginx&#xA;#带ssl stub_status模块 添加strem模块 –with-stream，这样就能传输tcp协议了 #http_stub_status_module 状态监控 #http_ssl_module 配置https #stream 配置tcp得转发 #http_gzip_static_module 压缩 #http_sub_module 替换请求&#xA;./configure &amp;ndash;prefix=/usr/local/nginx &amp;ndash;with-http_stub_status_module &amp;ndash;with-http_ssl_module &amp;ndash;with-stream&#xA;#带用户得方式 ./configure &amp;ndash;user=www &amp;ndash;group=www &amp;ndash;prefix=/usr/local/nginx &amp;ndash;with-http_stub_status_module &amp;ndash;with-http_ssl_module &amp;ndash;with-stream &amp;ndash;with-http_gzip_static_module &amp;ndash;with-http_sub_module&#xA;编译 安装 make &amp;amp;&amp;amp; make install</description>
    </item>
    <item>
      <title>权限问题</title>
      <link>https://r.xboox.cn/nginx/%E6%9D%83%E9%99%90%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://r.xboox.cn/nginx/%E6%9D%83%E9%99%90%E9%97%AE%E9%A2%98/</guid>
      <description>403异常 第一次配置一般是权限问题 /etc/nginx/nginx.conf&#xA;use nginx; 改为： use root;</description>
    </item>
    <item>
      <title>构建nginx容器</title>
      <link>https://r.xboox.cn/nginx/%E5%AE%B9%E5%99%A8%E6%9E%84%E5%BB%BA/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://r.xboox.cn/nginx/%E5%AE%B9%E5%99%A8%E6%9E%84%E5%BB%BA/</guid>
      <description>构建nginx容器 docker run -itd --name=nginx -p 8088:80 -p 443:443 -v /home/zouni/nginx/conf.d:/etc/nginx/conf.d -v /home/zouni/web/static:/home/zouni/web/static –restart=always –user=root nginx --privileged=true docker run -itd --name=nginx -p 8088:80 -p 443:443 -v /home/zouni/nginx/conf.d:/etc/nginx/conf.d -v /home/zouni/web/static:/home/zouni/web/static -user=root nginx:latest&#xD;docker run -itd &amp;ndash;name=nginx -p 5699:80 -p 443:443 -v /home/zouni88/nginx/conf.d:/etc/nginx/conf.d -v /home/web:/home/web &amp;ndash;restart=always &amp;ndash;user=root &amp;ndash;privileged=true nginx:latest</description>
    </item>
    <item>
      <title>返回固定页面配置</title>
      <link>https://r.xboox.cn/nginx/%E8%BF%94%E5%9B%9E%E5%9B%BA%E5%AE%9A%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://r.xboox.cn/nginx/%E8%BF%94%E5%9B%9E%E5%9B%BA%E5%AE%9A%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE/</guid>
      <description>配置静态站点，有些时候需要返回固定页面，访问url: /site/pageA /site/pageB 都返回index.html页面，这时候需要用到下面配置&#xA;location / { try_files $uri /index.html; }&#xD;</description>
    </item>
    <item>
      <title>错误页配置</title>
      <link>https://r.xboox.cn/nginx/%E9%94%99%E8%AF%AF%E9%A1%B5%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://r.xboox.cn/nginx/%E9%94%99%E8%AF%AF%E9%A1%B5%E9%85%8D%E7%BD%AE/</guid>
      <description>&#xD;server { # 监听的端口号 listen 80; # 域名 server_name your_domain; charset utf-8; # 最大的文件上传尺寸 client_max_body_size 75M; # 静态文件访问的url location / { # 静态文件地址 root /root/web/static/admin; # 过期时间 #expires 30d; } # vue 配置 单页面 访问，统统指向index error_page 400 304 404 500 502 503 504 /; }&#xD;</description>
    </item>
  </channel>
</rss>
