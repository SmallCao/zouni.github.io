<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2. dart on 西凉观云海</title>
    <link>https://r.xboox.cn/flutter/2.dart/</link>
    <description>Recent content in 2. dart on 西凉观云海</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://r.xboox.cn/flutter/2.dart/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>async和await使用</title>
      <link>https://r.xboox.cn/flutter/2.dart/async%E5%92%8Cawait/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://r.xboox.cn/flutter/2.dart/async%E5%92%8Cawait/</guid>
      <description>dart异步： dart是单线程模型，任何耗时操作都会阻塞；通过返回一个Future来接收耗时任务返回结果：future.then();&#xA;import &amp;#39;dart:io&amp;#39;; void main(List&amp;lt;String&amp;gt; args) { print(&amp;#34;main方法开始执行&amp;#34;); Future fu = testAsync(&amp;#34;&amp;#34;); fu.then( (value) =&amp;gt; print(&amp;#34;执行结果：${value}&amp;#34;), ); //sleep(Duration(seconds: 2)); print(&amp;#39;main方法结束&amp;#39;); } Future testAsync(args) async { print(&amp;#34;开始执行异步方法&amp;#34;); return Future(requestHttp); // print(&amp;#34;异步任务结束&amp;#34;); } String requestHttp() { sleep(Duration(seconds: 2)); print(&amp;#34;请求http结束&amp;#34;); return &amp;#34;success&amp;#34;; }&#xD;</description>
    </item>
    <item>
      <title>final和const区别</title>
      <link>https://r.xboox.cn/flutter/2.dart/final%E5%92%8Cconst%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://r.xboox.cn/flutter/2.dart/final%E5%92%8Cconst%E5%8C%BA%E5%88%AB/</guid>
      <description>final和const区别 final：修饰变量，初始化之后不可改变值&#xA;final name = &amp;lsquo;zhangsan&amp;rsquo;;&#xA;const：修饰常量&#xA;const name = &amp;lsquo;zhangsan&amp;rsquo;;&#xA;const常量值必须在编译期确定&#xA;var zhangsan = 12; var lisi = 13; const sum = zhangsan + lisi; //error final sum = zhangsan + lisi; //ok&#xD;</description>
    </item>
  </channel>
</rss>
