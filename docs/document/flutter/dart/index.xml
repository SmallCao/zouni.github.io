<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>云海阁</title>
    <link>https://zouni.vip/docs/document/flutter/dart/</link>
    <description>Recent content on 云海阁</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://zouni.vip/docs/document/flutter/dart/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://zouni.vip/docs/document/flutter/dart/async%E5%92%8Cawait/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zouni.vip/docs/document/flutter/dart/async%E5%92%8Cawait/</guid>
      <description>dart异步： dart是单线程模型，任何耗时操作都会阻塞；通过返回一个Future来接收耗时任务返回结果：future.then();
import &amp;#39;dart:io&amp;#39;;  void main(List&amp;lt;String&amp;gt; args) {  print(&amp;#34;main方法开始执行&amp;#34;);  Future fu = testAsync(&amp;#34;&amp;#34;);  fu.then(  (value) =&amp;gt; print(&amp;#34;执行结果：${value}&amp;#34;),  );  //sleep(Duration(seconds: 2));  print(&amp;#39;main方法结束&amp;#39;); }  Future testAsync(args) async {  print(&amp;#34;开始执行异步方法&amp;#34;);  return Future(requestHttp);  // print(&amp;#34;异步任务结束&amp;#34;); }  String requestHttp() {  sleep(Duration(seconds: 2));  print(&amp;#34;请求http结束&amp;#34;);  return &amp;#34;success&amp;#34;; } </description>
    </item>
    
    <item>
      <title></title>
      <link>https://zouni.vip/docs/document/flutter/dart/final%E5%92%8Cconst%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zouni.vip/docs/document/flutter/dart/final%E5%92%8Cconst%E5%8C%BA%E5%88%AB/</guid>
      <description>#final和const区别final：修饰变量，初始化之后不可改变值
 final name = &amp;lsquo;zhangsan&amp;rsquo;;
 const：修饰常量
 const name = &amp;lsquo;zhangsan&amp;rsquo;;
 const常量值必须在编译期确定
 var zhangsan = 12;  var lisi = 13;  const sum = zhangsan + lisi; //error  final sum = zhangsan + lisi; //ok </description>
    </item>
    
  </channel>
</rss>
